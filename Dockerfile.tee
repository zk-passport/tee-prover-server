FROM public.ecr.aws/docker/library/rust:1.81-bookworm as rust-builder
WORKDIR /src/
COPY Cargo.toml Cargo.lock ./
COPY src src/

ARG PROOFTYPE=${PROOFTYPE}
RUN cargo build --locked --release --features $PROOFTYPE

FROM public.ecr.aws/docker/library/rust:1.81-bookworm as circuit-builder
RUN apt-get update
RUN apt-get install nlohmann-json3-dev libgmp-dev nasm -y
WORKDIR /self
COPY ./self .

WORKDIR /circuits
RUN git clone https://github.com/iden3/circom.git
WORKDIR /circuits/circom
RUN cargo build --release
RUN cargo install --path circom

ARG PROOFTYPE=${PROOFTYPE}
COPY ./build_witnesscalc.sh .
RUN ./build_witnesscalc.sh $PROOFTYPE /self /circuits

FROM public.ecr.aws/docker/library/debian:12.6-slim@sha256:2ccc7e39b0a6f504d252f807da1fc4b5bcd838e83e4dec3e2f57b2a4a64e7214

RUN apt-get update \
    && apt-get install -y \
    build-essential \
    cmake \
    libgmp-dev \
    libsodium-dev \
    nasm \
    curl \
    m4 \
    netcat-traditional \
    socat \
    iproute2 \
    git \
    jq \
    unzip \
    wget \
    zstd \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /rapidsnark
COPY ./rapidsnark .
RUN ./build_gmp.sh host && \
    mkdir build_prover && cd build_prover && \
    cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../package && \
    make -j16 && make install

COPY start.sh /usr/local/bin
RUN chown root:root /usr/local/bin/start.sh && \
    chmod 755 /usr/local/bin/start.sh

COPY --from=rust-builder /src/target/release/tee-server /usr/local/bin/
COPY --from=circuit-builder /circuits /circuits
# COPY ./zkeys /zkeys

CMD ["/usr/local/bin/start.sh"]
